if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    namespace import ::tcltest::*
}

package require resolve

set tests {

test resolve_$mode-1.1 {resolve async} -body { #<<<
	if {[info coroutine] ne ""} {
		set cb		[info coroutine]
		set wait	yield
	} else {
		set cb		[list set ::resolve_res]
		set wait	{vwait ::resolve_res; return -level 0 $::resolve_res[unset ::resolve_res]}
	}
	resolve async rubylane.com $cb
	set res	[try $wait]
	llength $res
} -cleanup {
	unset -nocomplain res cb wait ::resolve_res
} -result 2
#>>>

}

# Coroutine context
coroutine coro_test_resolve namespace eval :: {
	set mode coro
	try $tests
	set done	1
}

if {![info exists done]} {
	vwait done
}

# Non-coroutine context
set mode vwait
try $tests

# cleanup
::tcltest::cleanupTests
return

# vim: ft=tcl foldmethod=marker foldmarker=<<<,>>> ts=4 shiftwidth=4
